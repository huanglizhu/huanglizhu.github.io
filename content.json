{"meta":{"title":"珠","subtitle":null,"description":null,"author":"黄丽珠","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-09-16T04:23:50.000Z","updated":"2019-09-16T07:02:13.642Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"作者： HLZ 出处： http://huanglizhu.github.io/ 本文基于 知识共享署名-相同方式共享 4.0 国际许可协议发布，欢迎转载，演绎或用于商业目的，但是必须保留本文的署名 HLZ及链接。"},{"title":"分类","date":"2019-09-16T04:23:41.000Z","updated":"2019-09-16T08:55:15.762Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-09-16T04:23:28.000Z","updated":"2019-09-16T04:25:08.820Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"HTML学习总结","slug":"JS/HTML学习总结","date":"2019-09-23T06:10:16.000Z","updated":"2019-09-26T06:10:33.613Z","comments":true,"path":"2019/09/23/JS/HTML学习总结/","link":"","permalink":"http://yoursite.com/2019/09/23/JS/HTML学习总结/","excerpt":"要好好利用input的type属性值 元素是最重要的表单元素。 最基础的：type=”text” 定义常规文本输入。 type=”radio” 定义单选按钮输入（选择多个选择之一） type=”submit” 定义提交按钮（提交表单） 像是type=”email”能对邮件地址进行验证。 type=”number”可以让输入框变成上下可选择数字范围。type=”range”可以让输入框变成滑动条可选择数字范围。 type=”date”让输入框有日期选择器。 type=”color”让输入框可以弹出颜色选择器。","text":"要好好利用input的type属性值 元素是最重要的表单元素。 最基础的：type=”text” 定义常规文本输入。 type=”radio” 定义单选按钮输入（选择多个选择之一） type=”submit” 定义提交按钮（提交表单） 像是type=”email”能对邮件地址进行验证。 type=”number”可以让输入框变成上下可选择数字范围。type=”range”可以让输入框变成滑动条可选择数字范围。 type=”date”让输入框有日期选择器。 type=”color”让输入框可以弹出颜色选择器。 属性值记得引号 js中写属性值一定要记得加上引号！！！ 验证今天的学习情况HTML是什么，HTML5是什么HTML HTML 是用来描述网页的一种语言。 HTML 指的是超文本标记语言 (Hyper Text Markup Language) HTML 不是一种编程语言，而是一种标记语言 (markup language) 标记语言是一套标记标签 (markup tag) HTML 使用标记标签来描述网页 HTML5 HTML5 是最新的 HTML 标准。 HTML5 是专门为承载丰富的 web 内容而设计的，并且无需额外插件。 HTML5 拥有新的语义、图形以及多媒体元素。 HTML5 提供的新元素和新的 API 简化了 web 应用程序的搭建。 HTML5 是跨平台的，被设计为在不同类型的硬件（PC、平板、手机、电视机等等）之上运行。 新的语义元素，比如 &lt;header&gt;, &lt;footer&gt;, &lt;article&gt;, and &lt;section&gt;。 新的表单控件，比如数字、日期、时间、日历和滑块。 强大的图像支持（借由 和 ） 强大的多媒体支持（借由 &lt;video&gt; 和 &lt;audio&gt;） 强大的新 API，比如用本地存储取代 cookie。 HTML元素标签、属性都是什么概念？HTML元素标签 HTML 标签是由尖括号包围的关键词，比如&lt;html&gt; HTML 标签通常是成对出现的，比如&lt;b&gt;和 &lt;/b&gt; 标签对中的第一个标签是开始(开放)标签，第二个标签是结束(闭合)标签 HTML元素属性 HTML 标签可以拥有属性。属性提供了有关 HTML 元素的更多的信息。 属性总是以名称/值对的形式出现，比如：name=”value”。 属性总是在 HTML 元素的开始标签中规定。 文档类型是什么概念，起什么作用？&lt;!DOCTYPE&gt; 声明帮助浏览器正确地显示网页。 Web 世界中存在许多不同的文档。只有了解文档的类型，浏览器才能正确地显示文档。 HTML 也有多个不同的版本，只有完全明白页面中使用的确切 HTML 版本，浏览器才能完全正确地显示出 HTML 页面。这就是 &lt;!DOCTYPE&gt; 的用处。 &lt;!DOCTYPE&gt;不是 HTML 标签。它为浏览器提供一项信息（声明），告诉浏览器 HTML 是用什么版本编写的。 它的出现位置在head标签的上面。 比如：HTML5的声明方式是：&lt;!DOCTYPE html&gt; meta标签都用来做什么的？ 元数据（metadata）是关于数据的信息。 &lt;meta&gt; 标签提供关于 HTML 文档的元数据。元数据不会显示在页面上，但是对于机器是可读的。 典型的情况是，meta 元素被用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元数据。 标签始终位于 head 元素中。 元数据可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他 web 服务。 针对搜索引擎的关键词一些搜索引擎会利用 meta 元素的 name 和 content 属性来索引您的页面。 下面的 meta 元素定义页面的描述： 1&lt;meta name=\"description\" content=\"Free Web tutorials on HTML, CSS, XML\" /&gt; name 和 content 属性的作用是描述页面的内容。 Web语义化是什么，是为了解决什么问题? 语义化简单说来就是让机器可以读懂内容。在发布内容的时候，就用机器可读的、被广泛认可的语义信息来描述内容，来降低机器处理 Web 内容的难度。 我们在提供内容的时候，首先要做的就是将内容本身进行合理的描述，暂时不用考虑它的最终呈现会是什么样子。 HTML5 并非 Web 语义唯一倚仗的规范，除了 W3C 和 WHATWG 外，还有其它的组织在为扩展、标准化 Web 语义做着贡献。只要有浏览器厂商、搜索引擎原意支持，它们的规范一样可以成为通用的基础设施。 为了解决机器难以读懂web上发布的各种内容的问题。 链接是什么概念，对应什么标签？ HTML 使用超级链接与网络上的另一个文档相连。 超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。 当您把鼠标指针移动到网页中的某个链接上时，箭头会变为一只小手。 我们通过使用&lt;a&gt; 标签在 HTML 中创建链接。 有两种使用 &lt;a&gt;标签的方式：通过使用 href 属性 - 创建指向另一个文档的链接通过使用 name 属性 - 创建文档内的书签(锚) 常用标签都有哪些，都适合用在什么场景 head标签中的title标签定义文档的标题，显示在浏览器的标题栏或标签页上 h1-h6标签用于标题 a标签用于超链接（其中name属性可以用于创建导航栏） p标签用于文段，span标签用于行内文字 input标签非常多用，像他的type的不同属性值让他可以用于多个场景。 最基础的：type=”text” 定义常规文本输入。 type=”radio” 定义单选按钮输入（选择多个选择之一） type=”submit” 定义提交按钮（提交表单） 像是type=”email”能对邮件地址进行验证。 type=”number”可以让输入框变成上下可选择数字范围。type=”range”可以让输入框变成滑动条可选择数字范围。 type=”date”让输入框有日期选择器。 type=”color”让输入框可以弹出颜色选择器。 表单标签都有哪些，对应着什么功能，都有哪些属性？ 元素是最重要的表单元素。 type属性：他决定了input这个输入框具体用来做什么，比如text那他就是用来输入文本的，button就是按钮，submit定义提交表单数据至表单处理程序的按钮。，radio是单选按钮，checkbox复选框， name 属性：如果form表单要正确地被提交，每个输入字段必须设置一个 name 属性。 ol, ul, li, dl, dd, dt等这些标签都适合用在什么地方，举个例子ol（有序 HTML 列表） start属性：规定开始数字，如从“50.咖啡”开始： 12345&lt;ol start=\"50\"&gt; &lt;li&gt;咖啡&lt;/li&gt; &lt;li&gt;牛奶&lt;/li&gt; &lt;li&gt;茶&lt;/li&gt;&lt;/ol&gt; type属性：不同的属性值决定了有序列表前面的序号表示。 实例 ul（无序 HTML 列表） type属性：不同的属性值决定了无序列表前面的小图标图形。 实例 li 标签 定义列表项目。 &lt;li&gt; 标签可用在有序列表 &lt;ol&gt; 和无序列表 &lt;ul&gt; 中。 dl 标签 &lt;dl&gt; 标签定义了定义列表（definition list）。 &lt;dl&gt; 标签用于结合&lt;dt&gt; （定义列表中的项目）和&lt;dd&gt; （描述列表中的项目）。 实例 dt标签 &lt;dt&gt; 标签定义了定义列表中的项目（即术语部分）。 会顶格显示。 dd标签 &lt;dd&gt;在定义列表中定义条目的定义部分。 会缩进2个字符显示。 总的来说dl相当于ol与ul，dt、dd相当于li的位置。","categories":[],"tags":[]},{"title":"history对象","slug":"JS/history对象","date":"2019-09-16T03:36:16.000Z","updated":"2019-09-16T08:04:51.811Z","comments":true,"path":"2019/09/16/JS/history对象/","link":"","permalink":"http://yoursite.com/2019/09/16/JS/history对象/","excerpt":"history历史对象history 对象保存了用户在浏览器中访问页面的历史记录。 history对象的属性 ==length== 返回浏览器历史列表中的 ==URL数量==","text":"history历史对象history 对象保存了用户在浏览器中访问页面的历史记录。 history对象的属性 ==length== 返回浏览器历史列表中的 ==URL数量== history对象的方法回到历史记录的上一步 语法：history.back（） 功能：回到历史记录的上一步 说明：相当于使用了history.go（-1） 补充：使用history.go（-2）则是回到历史记录的上一步的再上一步 举例： index10.html里面给个超链接跳转到index11.html： 1&lt;a href=\"index11.html\"&gt;跳转到index11.html&lt;/a&gt; index11.html里给个后退按钮： 1234567891011&lt;body&gt; &lt;p&gt;这是index11.html&lt;/p&gt; &lt;p&gt;&lt;input type=\"button\" id=\"btn\" value=\"后退\"&gt;&lt;/p&gt; &lt;script&gt; var btn=document.getElementById(\"btn\"); btn.onclick=function()&#123; history.back(); //history.go(-1); &#125; &lt;/script&gt;&lt;/body&gt; 回到历史记录的下一步 语法：location.forward（） 注意：==千万不要忘记forward后面的括号== 功能：回到历史记录的下一步 说明：相当于使用了history.go（1） 举例 index11.html：有新增的2个按钮（前进，前进两个页面）和一个跳转index12.html的链接 1234567891011121314151617181920212223242526&lt;body&gt; &lt;p&gt;这是index11.html&lt;/p&gt; &lt;p&gt; &lt;a href=\"index12.html\"&gt;跳转到index12.html&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;input type=\"button\" id=\"btn\" value=\"后退\"&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=\"button\" id=\"btn2\" value=\"前进\"&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=\"button\" id=\"btn3\" value=\"前进2\"&gt;&lt;/p&gt; &lt;script&gt; var btn = document.getElementById(\"btn\"); var btn2 = document.getElementById(\"btn2\"); var btn3 = document.getElementById(\"btn3\"); btn.onclick = function () &#123; // history.back(); history.go(-1); &#125; btn2.onclick = function () &#123; history.forward(); // history.go(1); &#125; btn3.onclick = function () &#123; history.go(2); &#125; &lt;/script&gt;&lt;/body&gt; 做两个可供跳转的页面index12.html和index13.html，从12跳到13 123456&lt;body&gt; &lt;p&gt;这是index12.html&lt;/p&gt; &lt;p&gt; &lt;a href=\"index13.html\"&gt;跳转到index13.html&lt;/a&gt; &lt;/p&gt;&lt;/body&gt; 123&lt;body&gt; &lt;p&gt;这是index13.html&lt;/p&gt; &lt;/body&gt; 跳到13以后再回到11去测试按钮 前进或者后退多步 语法：history.go（-n） 功能：回到历史记录的前n步 语法：history.go（n） 功能：回到历史记录的后n步","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-09-15T14:22:54.206Z","updated":"2019-09-15T14:22:54.206Z","comments":true,"path":"2019/09/15/hello-world/","link":"","permalink":"http://yoursite.com/2019/09/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}